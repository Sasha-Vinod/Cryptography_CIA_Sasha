#include <iostream>
#include <string>
#include <cctype>

void vigenereEncrypt(std::string &text, const std::string &key) {
    int keyIndex = 0;
    for (int i = 0; i < text.length(); i++) {
        if (isalpha(text[i])) {
            char base = isupper(text[i]) ? 'A' : 'a';
            char keyChar = isupper(key[keyIndex]) ? key[keyIndex] : toupper(key[keyIndex]);
            text[i] = (text[i] - base + (keyChar - 'A')) % 26 + base;
            keyIndex = (keyIndex + 1) % key.length();
        }
    }
}

void vigenereDecrypt(std::string &text, const std::string &key) {
    int keyIndex = 0;
    for (int i = 0; i < text.length(); i++) {
        if (isalpha(text[i])) {
            char base = isupper(text[i]) ? 'A' : 'a';
            char keyChar = isupper(key[keyIndex]) ? key[keyIndex] : toupper(key[keyIndex]);
            text[i] = (text[i] - base - (keyChar - 'A') + 26) % 26 + base;
            keyIndex = (keyIndex + 1) % key.length();
        }
    }
}

int main() {
    std::string text, key;

    std::cout << "Enter text: ";
    std::getline(std::cin, text);

    std::cout << "Enter key: ";
    std::getline(std::cin, key);

    vigenereEncrypt(text, key);
    std::cout << "Encrypted text: " << text << std::endl;

    vigenereDecrypt(text, key);
    std::cout << "Decrypted text: " << text << std::endl;

    return 0;
}
