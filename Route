#include <iostream>
#include <string>
#include <vector>
#include <cmath>

using namespace std;

void routeEncrypt(const string& text, int rows, int cols, string& encrypted) {
    vector<vector<char>> grid(rows, vector<char>(cols, ' '));
    int index = 0;

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (index < text.length()) {
                grid[i][j] = text[index++];
            }
        }
    }

    for (int j = 0; j < cols; j++) {
        for (int i = 0; i < rows; i++) {
            encrypted += grid[i][j];
        }
    }
}

void routeDecrypt(const string& text, int rows, int cols, string& decrypted) {
    vector<vector<char>> grid(rows, vector<char>(cols, ' '));
    int index = 0;

    for (int j = 0; j < cols; j++) {
        for (int i = 0; i < rows; i++) {
            if (index < text.length()) {
                grid[i][j] = text[index++];
            }
        }
    }

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            decrypted += grid[i][j];
        }
    }
}

int main() {
    string text, encrypted, decrypted;
    int rows, cols;

    cout << "Enter plaintext: ";
    getline(cin, text);

    cout << "Enter number of rows: ";
    cin >> rows;

    cout << "Enter number of columns: ";
    cin >> cols;

    routeEncrypt(text, rows, cols, encrypted);
    cout << "Encrypted text: " << encrypted << endl;

    routeDecrypt(encrypted, rows, cols, decrypted);
    cout << "Decrypted text: " << decrypted << endl;

    return 0;
}
